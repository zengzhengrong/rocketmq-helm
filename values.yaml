# Default values for rocketmq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: apache/rocketmq
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

persistence:
  storageClass: openebs-hostpath
  accessMode: ReadWriteOnce
  size: 10Gi

namesrv:
  replicas: 2
  envs:
    - name: TZ
      value: Asia/Shanghai

dashboard:
  image:
    repository: apacherocketmq/rocketmq-dashboard
    pullPolicy: IfNotPresent
    tag: '1.0.0'
  envs:
    - name: TZ
      value: Asia/Shanghai
 
broker:
  envs:
    - name: TZ
      value: Asia/Shanghai

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: 'nginx'
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: rocketmq-dashboard.localhost
      paths:
        - path: '/'
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  perBroker:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 512Mi
  dashboard:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  namesrv:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
